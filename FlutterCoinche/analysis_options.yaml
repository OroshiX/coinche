analyzer:
  enable-experiment:
    - non-nullable
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: error
    missing_return: error
    dead_code: error
  exclude:
    - lib/.env.dart
linter:
  rules:
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - empty_catches
    - no_duplicate_case_values
    - null_closures
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_for_elements_to_map_fromIterable
    - prefer_if_null_operators
    - prefer_spread_collections
    - recursive_getters
    - unawaited_futures
    - unnecessary_null_in_if_null_operators
    - unrelated_type_equality_checks
    - use_function_type_syntax_for_parameters
    - valid_regexps
    # Analysis flutter
    - avoid_web_libraries_in_flutter
    - await_only_futures
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally
    - empty_statements
    - package_names
    - package_prefixed_library_names
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_statements
    # effective Dart
    # STYLE
    - camel_case_types
    - camel_case_extensions
    - library_names
    - file_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names # prefer
    - directives_ordering
    - curly_braces_in_flow_control_structures

    # DOCUMENTATION
    - slash_for_doc_comments
    - package_api_docs # prefer

    # USAGE
    - avoid_relative_lib_imports
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - prefer_is_empty
    - prefer_is_not_empty
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    #    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors
    - use_rethrow_when_possible

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    - one_member_abstracts # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    - omit_local_variable_types # avoid
    - avoid_return_types_on_setters
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    - avoid_positional_boolean_parameters # avoid
    - hash_and_equals
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators
    #
    #- avoid_print # todo un-comment this for prod
    - avoid_type_to_string
    - avoid_unused_constructor_parameters
    - avoid_unnecessary_containers
    - unnecessary_await_in_return
    - unnecessary_null_aware_assignments
    - unnecessary_parenthesis
    - use_full_hex_values_for_flutter_colors
    - void_checks